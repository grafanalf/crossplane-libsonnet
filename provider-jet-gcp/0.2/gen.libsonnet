{
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='crossplane_jet_gcp', url='github.com/jsonnet-libs/crossplane-libsonnet/provider-jet-gcp/0.2/main.libsonnet', help=''),
  accessapproval:: (import '_gen/accessapproval/main.libsonnet'),
  accesscontextmanager:: (import '_gen/accesscontextmanager/main.libsonnet'),
  activedirectory:: (import '_gen/activedirectory/main.libsonnet'),
  apigee:: (import '_gen/apigee/main.libsonnet'),
  appengine:: (import '_gen/appengine/main.libsonnet'),
  assuredworkloads:: (import '_gen/assuredworkloads/main.libsonnet'),
  bigquery:: (import '_gen/bigquery/main.libsonnet'),
  bigtable:: (import '_gen/bigtable/main.libsonnet'),
  billing:: (import '_gen/billing/main.libsonnet'),
  binaryauthorization:: (import '_gen/binaryauthorization/main.libsonnet'),
  cloudasset:: (import '_gen/cloudasset/main.libsonnet'),
  cloudbuild:: (import '_gen/cloudbuild/main.libsonnet'),
  cloudfunctions:: (import '_gen/cloudfunctions/main.libsonnet'),
  cloudidentity:: (import '_gen/cloudidentity/main.libsonnet'),
  cloudiot:: (import '_gen/cloudiot/main.libsonnet'),
  cloudplatform:: (import '_gen/cloudplatform/main.libsonnet'),
  cloudrun:: (import '_gen/cloudrun/main.libsonnet'),
  cloudscheduler:: (import '_gen/cloudscheduler/main.libsonnet'),
  cloudtasks:: (import '_gen/cloudtasks/main.libsonnet'),
  composer:: (import '_gen/composer/main.libsonnet'),
  compute:: (import '_gen/compute/main.libsonnet'),
  container:: (import '_gen/container/main.libsonnet'),
  containeranalysis:: (import '_gen/containeranalysis/main.libsonnet'),
  datacatalog:: (import '_gen/datacatalog/main.libsonnet'),
  dataflow:: (import '_gen/dataflow/main.libsonnet'),
  datalossprevention:: (import '_gen/datalossprevention/main.libsonnet'),
  dataproc:: (import '_gen/dataproc/main.libsonnet'),
  datastore:: (import '_gen/datastore/main.libsonnet'),
  deploymentmanager:: (import '_gen/deploymentmanager/main.libsonnet'),
  dialogflow:: (import '_gen/dialogflow/main.libsonnet'),
  dialogflowcx:: (import '_gen/dialogflowcx/main.libsonnet'),
  dns:: (import '_gen/dns/main.libsonnet'),
  endpoints:: (import '_gen/endpoints/main.libsonnet'),
  essentialcontacts:: (import '_gen/essentialcontacts/main.libsonnet'),
  eventarc:: (import '_gen/eventarc/main.libsonnet'),
  filestore:: (import '_gen/filestore/main.libsonnet'),
  firestore:: (import '_gen/firestore/main.libsonnet'),
  gameservices:: (import '_gen/gameservices/main.libsonnet'),
  gcp:: (import '_gen/gcp/main.libsonnet'),
  gkehub:: (import '_gen/gkehub/main.libsonnet'),
  healthcare:: (import '_gen/healthcare/main.libsonnet'),
  iap:: (import '_gen/iap/main.libsonnet'),
  identityplatform:: (import '_gen/identityplatform/main.libsonnet'),
  kms:: (import '_gen/kms/main.libsonnet'),
  logging:: (import '_gen/logging/main.libsonnet'),
  memcache:: (import '_gen/memcache/main.libsonnet'),
  mlengine:: (import '_gen/mlengine/main.libsonnet'),
  monitoring:: (import '_gen/monitoring/main.libsonnet'),
  networkmanagement:: (import '_gen/networkmanagement/main.libsonnet'),
  networkservices:: (import '_gen/networkservices/main.libsonnet'),
  notebooks:: (import '_gen/notebooks/main.libsonnet'),
  orgpolicy:: (import '_gen/orgpolicy/main.libsonnet'),
  osconfig:: (import '_gen/osconfig/main.libsonnet'),
  oslogin:: (import '_gen/oslogin/main.libsonnet'),
  privateca:: (import '_gen/privateca/main.libsonnet'),
  pubsub:: (import '_gen/pubsub/main.libsonnet'),
  redis:: (import '_gen/redis/main.libsonnet'),
  resourcemanager:: (import '_gen/resourcemanager/main.libsonnet'),
  scc:: (import '_gen/scc/main.libsonnet'),
  secretmanager:: (import '_gen/secretmanager/main.libsonnet'),
  servicenetworking:: (import '_gen/servicenetworking/main.libsonnet'),
  sourcerepo:: (import '_gen/sourcerepo/main.libsonnet'),
  spanner:: (import '_gen/spanner/main.libsonnet'),
  sql:: (import '_gen/sql/main.libsonnet'),
  storage:: (import '_gen/storage/main.libsonnet'),
  storagetransfer:: (import '_gen/storagetransfer/main.libsonnet'),
  tags:: (import '_gen/tags/main.libsonnet'),
  tpu:: (import '_gen/tpu/main.libsonnet'),
  vertexai:: (import '_gen/vertexai/main.libsonnet'),
  vpcaccess:: (import '_gen/vpcaccess/main.libsonnet'),
  workflows:: (import '_gen/workflows/main.libsonnet'),
}

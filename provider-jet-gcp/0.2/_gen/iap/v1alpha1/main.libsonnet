{
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='v1alpha1', url='', help=''),
  appEngineServiceIAMBinding: (import 'appEngineServiceIAMBinding.libsonnet'),
  appEngineServiceIAMMember: (import 'appEngineServiceIAMMember.libsonnet'),
  appEngineServiceIAMPolicy: (import 'appEngineServiceIAMPolicy.libsonnet'),
  appEngineVersionIAMBinding: (import 'appEngineVersionIAMBinding.libsonnet'),
  appEngineVersionIAMMember: (import 'appEngineVersionIAMMember.libsonnet'),
  appEngineVersionIAMPolicy: (import 'appEngineVersionIAMPolicy.libsonnet'),
  brand: (import 'brand.libsonnet'),
  client: (import 'client.libsonnet'),
  tunnelIAMBinding: (import 'tunnelIAMBinding.libsonnet'),
  tunnelIAMMember: (import 'tunnelIAMMember.libsonnet'),
  tunnelIAMPolicy: (import 'tunnelIAMPolicy.libsonnet'),
  tunnelInstanceIAMBinding: (import 'tunnelInstanceIAMBinding.libsonnet'),
  tunnelInstanceIAMMember: (import 'tunnelInstanceIAMMember.libsonnet'),
  tunnelInstanceIAMPolicy: (import 'tunnelInstanceIAMPolicy.libsonnet'),
  webBackendServiceIAMBinding: (import 'webBackendServiceIAMBinding.libsonnet'),
  webBackendServiceIAMMember: (import 'webBackendServiceIAMMember.libsonnet'),
  webBackendServiceIAMPolicy: (import 'webBackendServiceIAMPolicy.libsonnet'),
  webIAMBinding: (import 'webIAMBinding.libsonnet'),
  webIAMMember: (import 'webIAMMember.libsonnet'),
  webIAMPolicy: (import 'webIAMPolicy.libsonnet'),
  webTypeAppEngineIAMBinding: (import 'webTypeAppEngineIAMBinding.libsonnet'),
  webTypeAppEngineIAMMember: (import 'webTypeAppEngineIAMMember.libsonnet'),
  webTypeAppEngineIAMPolicy: (import 'webTypeAppEngineIAMPolicy.libsonnet'),
  webTypeComputeIAMBinding: (import 'webTypeComputeIAMBinding.libsonnet'),
  webTypeComputeIAMMember: (import 'webTypeComputeIAMMember.libsonnet'),
  webTypeComputeIAMPolicy: (import 'webTypeComputeIAMPolicy.libsonnet'),
}

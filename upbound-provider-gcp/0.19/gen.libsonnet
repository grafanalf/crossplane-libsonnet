{
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='upbound_gcp', url='github.com/jsonnet-libs/crossplane-libsonnet/upbound-provider-gcp/0.19/main.libsonnet', help=''),
  appengine:: (import '_gen/appengine/main.libsonnet'),
  bigquery:: (import '_gen/bigquery/main.libsonnet'),
  cloudfunctions:: (import '_gen/cloudfunctions/main.libsonnet'),
  cloudplatform:: (import '_gen/cloudplatform/main.libsonnet'),
  cloudrun:: (import '_gen/cloudrun/main.libsonnet'),
  cloudscheduler:: (import '_gen/cloudscheduler/main.libsonnet'),
  cloudtasks:: (import '_gen/cloudtasks/main.libsonnet'),
  composer:: (import '_gen/composer/main.libsonnet'),
  compute:: (import '_gen/compute/main.libsonnet'),
  container:: (import '_gen/container/main.libsonnet'),
  containeranalysis:: (import '_gen/containeranalysis/main.libsonnet'),
  containeraws:: (import '_gen/containeraws/main.libsonnet'),
  containerazure:: (import '_gen/containerazure/main.libsonnet'),
  datacatalog:: (import '_gen/datacatalog/main.libsonnet'),
  dataflow:: (import '_gen/dataflow/main.libsonnet'),
  dialogflowcx:: (import '_gen/dialogflowcx/main.libsonnet'),
  dns:: (import '_gen/dns/main.libsonnet'),
  essentialcontacts:: (import '_gen/essentialcontacts/main.libsonnet'),
  eventarc:: (import '_gen/eventarc/main.libsonnet'),
  filestore:: (import '_gen/filestore/main.libsonnet'),
  firebaserules:: (import '_gen/firebaserules/main.libsonnet'),
  gcp:: (import '_gen/gcp/main.libsonnet'),
  gkehub:: (import '_gen/gkehub/main.libsonnet'),
  healthcare:: (import '_gen/healthcare/main.libsonnet'),
  iap:: (import '_gen/iap/main.libsonnet'),
  identityplatform:: (import '_gen/identityplatform/main.libsonnet'),
  kms:: (import '_gen/kms/main.libsonnet'),
  monitoring:: (import '_gen/monitoring/main.libsonnet'),
  notebooks:: (import '_gen/notebooks/main.libsonnet'),
  osconfig:: (import '_gen/osconfig/main.libsonnet'),
  oslogin:: (import '_gen/oslogin/main.libsonnet'),
  privateca:: (import '_gen/privateca/main.libsonnet'),
  pubsub:: (import '_gen/pubsub/main.libsonnet'),
  redis:: (import '_gen/redis/main.libsonnet'),
  secretmanager:: (import '_gen/secretmanager/main.libsonnet'),
  servicenetworking:: (import '_gen/servicenetworking/main.libsonnet'),
  sourcerepo:: (import '_gen/sourcerepo/main.libsonnet'),
  spanner:: (import '_gen/spanner/main.libsonnet'),
  sql:: (import '_gen/sql/main.libsonnet'),
  storage:: (import '_gen/storage/main.libsonnet'),
}
